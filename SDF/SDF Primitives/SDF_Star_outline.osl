// SDF Sharp_Star_outline Shader
// SDF_Sharp_Star_outline.osl by IMAN SHIRANI
// 2025-09-11



shader SDF_Sharp_Star_outline(
    
    point Position_UV = point(u, v, 0.0) * 2.0 - vector(1.0),

    int Vertices = 5,
    float RadiusOuter = 0.8,
    float RadiusInner = 0.4,

    output float SDF_Out = 0.0
)
{
    
    vector p = vector(Position_UV[0], Position_UV[1], 0.0);

    
    float angle_slice = M_PI / Vertices;
    float angle = atan2(p[1], p[0]);
    float r = length(p);
    angle = mod(angle, 2.0 * angle_slice);

    
    if (angle > angle_slice) {
        angle = 2.0 * angle_slice - angle;
    }
    p = r * vector(cos(angle), sin(angle), 0.0);
    
    
    vector p_outer = vector(RadiusOuter, 0.0, 0.0);
    vector p_inner = RadiusInner * vector(cos(angle_slice), sin(angle_slice), 0.0);
    vector edge = p_inner - p_outer;
    vector w = p - p_outer;
    
    
    float h = clamp(dot(w, edge) / dot(edge, edge), 0.0, 1.0);
    float dist = length(w - edge * h);

    
    SDF_Out = dist * sign(p[0] * edge[1] - p[1] * edge[0]);
}