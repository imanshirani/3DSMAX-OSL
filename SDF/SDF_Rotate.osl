
// SDF_Rotate.osl by IMAN SHIRANI
// 2025-09-11


void rotate_x(output point p, float angle) {
    float rad = radians(angle);
    float s = sin(rad);
    float c = cos(rad);
    p = point(p[0], p[1]*c - p[2]*s, p[1]*s + p[2]*c);
}
void rotate_y(output point p, float angle) {
    float rad = radians(angle);
    float s = sin(rad);
    float c = cos(rad);
    p = point(p[0]*c + p[2]*s, p[1], -p[0]*s + p[2]*c);
}
void rotate_z(output point p, float angle) {
    float rad = radians(angle);
    float s = sin(rad);
    float c = cos(rad);
    p = point(p[0]*c - p[1]*s, p[0]*s + p[1]*c, p[2]);
}

shader SDF_Rotate(
    point Position_In = P,
    float Angle_X = 0.0,
    float Angle_Y = 0.0,
    float Angle_Z = 0.0,

    output point Position_Out = P
)
{
    Position_Out = Position_In;
    rotate_z(Position_Out, Angle_Z);
    rotate_y(Position_Out, Angle_Y);
    rotate_x(Position_Out, Angle_X);
}