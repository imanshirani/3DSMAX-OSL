
// SDF_Repeat_Radial_Advanced.osl by IMAN SHIRANI
// 2025-09-11


shader SDF_Repeat_Radial_Advanced(
    point Position_In = P,

    int Repetitions = 8,
    float Placement_Radius = 0.7,
    
    float Placement_Angle = 0.0,  

    output point Position_Out = P,
    output float Slice_ID = 0.0 
)
{
    
    vector p = vector(Position_In[0], Position_In[1], 0.0);
    float angle = atan2(p[1], p[0]);
    float radius = length(p);
    float slice_angle = 2.0 * M_PI / Repetitions;
    Slice_ID = floor(angle / slice_angle);
    angle = mod(angle, slice_angle);
    point folded_space = radius * point(cos(angle), sin(angle), Position_In[2]);

    
    float rad = radians(Placement_Angle);
    float s = sin(rad);
    float c = cos(rad);
    float new_x = folded_space[0] * c - folded_space[1] * s;
    float new_y = folded_space[0] * s + folded_space[1] * c;
    point rotated_space = point(new_x, new_y, folded_space[2]);
    
    
    Position_Out = rotated_space - vector(Placement_Radius, 0.0, 0.0);
}